{"ast":null,"code":"import { composeEventHandlers as e } from \"@radix-ui/primitive\";\nimport { clamp as r } from \"@radix-ui/number\";\nimport { useLayoutEffect as t } from \"@radix-ui/react-use-layout-effect\";\nimport { useDirection as o } from \"@radix-ui/react-use-direction\";\nimport { useCallbackRef as n } from \"@radix-ui/react-use-callback-ref\";\nimport { useComposedRefs as l } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as i } from \"@radix-ui/react-context\";\nimport { Presence as a } from \"@radix-ui/react-presence\";\nimport { Primitive as c } from \"@radix-ui/react-primitive\";\nimport * as s from \"react\";\nimport u from \"@babel/runtime/helpers/esm/extends\";\nconst [d, p] = i(\"ScrollArea\");\nexport { p as createScrollAreaScope };\nconst [f, h] = d(\"ScrollArea\");\nexport const ScrollArea = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n      __scopeScrollArea: t,\n      type: n = \"hover\",\n      scrollHideDelay: i = 600,\n      ...a\n    } = e,\n    [d, p] = s.useState(null),\n    [h, m] = s.useState(null),\n    [w, b] = s.useState(null),\n    [v, S] = s.useState(null),\n    [g, E] = s.useState(null),\n    [C, T] = s.useState(0),\n    [y, A] = s.useState(0),\n    [x, R] = s.useState(!1),\n    [P, L] = s.useState(!1),\n    _ = l(r, e => p(e)),\n    D = o(d, a.dir); /*#__PURE__*/\n  return s.createElement(f, {\n    scope: t,\n    type: n,\n    dir: D,\n    scrollHideDelay: i,\n    scrollArea: d,\n    viewport: h,\n    onViewportChange: m,\n    content: w,\n    onContentChange: b,\n    scrollbarX: v,\n    onScrollbarXChange: S,\n    scrollbarXEnabled: x,\n    onScrollbarXEnabledChange: R,\n    scrollbarY: g,\n    onScrollbarYChange: E,\n    scrollbarYEnabled: P,\n    onScrollbarYEnabledChange: L,\n    onCornerWidthChange: T,\n    onCornerHeightChange: A\n  }, /*#__PURE__*/s.createElement(c.div, u({}, a, {\n    ref: _,\n    style: {\n      position: \"relative\",\n      \"--radix-scroll-area-corner-width\": C + \"px\",\n      \"--radix-scroll-area-corner-height\": y + \"px\",\n      ...e.style\n    }\n  })));\n}); /*#__PURE__*/\nexport const ScrollAreaViewport = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n      __scopeScrollArea: t,\n      children: o,\n      ...n\n    } = e,\n    i = h(\"ScrollAreaViewport\", t),\n    a = s.useRef(null),\n    d = l(r, a, i.onViewportChange); /*#__PURE__*/\n  return s.createElement(s.Fragment, null, /*#__PURE__*/s.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: \"[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}\"\n    }\n  }), /*#__PURE__*/s.createElement(c.div, u({\n    \"data-radix-scroll-area-viewport\": \"\"\n  }, n, {\n    ref: d,\n    style: {\n      overflowX: i.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: i.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n      ...e.style\n    }\n  }), /*#__PURE__*/s.createElement(\"div\", {\n    ref: i.onContentChange,\n    style: {\n      minWidth: \"100%\",\n      display: \"table\"\n    }\n  }, o)));\n}); /*#__PURE__*/\nexport const ScrollAreaScrollbar = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n      forceMount: t,\n      ...o\n    } = e,\n    n = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n    {\n      onScrollbarXEnabledChange: l,\n      onScrollbarYEnabledChange: i\n    } = n,\n    a = \"horizontal\" === e.orientation;\n  return s.useEffect(() => (a ? l(!0) : i(!0), () => {\n    a ? l(!1) : i(!1);\n  }), [a, l, i]), \"hover\" === n.type ? /*#__PURE__*/s.createElement(m, u({}, o, {\n    ref: r,\n    forceMount: t\n  })) : \"scroll\" === n.type ? /*#__PURE__*/s.createElement(w, u({}, o, {\n    ref: r,\n    forceMount: t\n  })) : \"auto\" === n.type ? /*#__PURE__*/s.createElement(b, u({}, o, {\n    ref: r,\n    forceMount: t\n  })) : \"always\" === n.type ? /*#__PURE__*/s.createElement(v, u({}, o, {\n    ref: r\n  })) : null;\n}); /*#__PURE__*/\nconst m = /*#__PURE__*/s.forwardRef((e, r) => {\n    const {\n        forceMount: t,\n        ...o\n      } = e,\n      n = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n      [l, i] = s.useState(!1);\n    return s.useEffect(() => {\n      const e = n.scrollArea;\n      let r = 0;\n      if (e) {\n        const t = () => {\n            window.clearTimeout(r), i(!0);\n          },\n          o = () => {\n            r = window.setTimeout(() => i(!1), n.scrollHideDelay);\n          };\n        return e.addEventListener(\"pointerenter\", t), e.addEventListener(\"pointerleave\", o), () => {\n          e.removeEventListener(\"pointerenter\", t), e.removeEventListener(\"pointerleave\", o);\n        };\n      }\n    }, [n.scrollArea, n.scrollHideDelay]), /*#__PURE__*/s.createElement(a, {\n      present: t || l\n    }, /*#__PURE__*/s.createElement(b, u({\n      \"data-state\": l ? \"visible\" : \"hidden\"\n    }, o, {\n      ref: r\n    })));\n  }),\n  w = /*#__PURE__*/s.forwardRef((r, t) => {\n    const {\n        forceMount: o,\n        ...n\n      } = r,\n      l = h(\"ScrollAreaScrollbar\", r.__scopeScrollArea),\n      i = \"horizontal\" === r.orientation,\n      c = z(() => p(\"SCROLL_END\"), 100),\n      [d, p] = (f = \"hidden\", m = {\n        hidden: {\n          SCROLL: \"scrolling\"\n        },\n        scrolling: {\n          SCROLL_END: \"idle\",\n          POINTER_ENTER: \"interacting\"\n        },\n        interacting: {\n          SCROLL: \"interacting\",\n          POINTER_LEAVE: \"idle\"\n        },\n        idle: {\n          HIDE: \"hidden\",\n          SCROLL: \"scrolling\",\n          POINTER_ENTER: \"interacting\"\n        }\n      }, s.useReducer((e, r) => {\n        const t = m[e][r];\n        return null != t ? t : e;\n      }, f));\n    var f, m;\n    return s.useEffect(() => {\n      if (\"idle\" === d) {\n        const e = window.setTimeout(() => p(\"HIDE\"), l.scrollHideDelay);\n        return () => window.clearTimeout(e);\n      }\n    }, [d, l.scrollHideDelay, p]), s.useEffect(() => {\n      const e = l.viewport,\n        r = i ? \"scrollLeft\" : \"scrollTop\";\n      if (e) {\n        let t = e[r];\n        const o = () => {\n          const o = e[r];\n          t !== o && (p(\"SCROLL\"), c()), t = o;\n        };\n        return e.addEventListener(\"scroll\", o), () => e.removeEventListener(\"scroll\", o);\n      }\n    }, [l.viewport, i, p, c]), /*#__PURE__*/s.createElement(a, {\n      present: o || \"hidden\" !== d\n    }, /*#__PURE__*/s.createElement(v, u({\n      \"data-state\": \"hidden\" === d ? \"hidden\" : \"visible\"\n    }, n, {\n      ref: t,\n      onPointerEnter: e(r.onPointerEnter, () => p(\"POINTER_ENTER\")),\n      onPointerLeave: e(r.onPointerLeave, () => p(\"POINTER_LEAVE\"))\n    })));\n  }),\n  b = /*#__PURE__*/s.forwardRef((e, r) => {\n    const t = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n      {\n        forceMount: o,\n        ...n\n      } = e,\n      [l, i] = s.useState(!1),\n      c = \"horizontal\" === e.orientation,\n      d = z(() => {\n        if (t.viewport) {\n          const e = t.viewport.offsetWidth < t.viewport.scrollWidth,\n            r = t.viewport.offsetHeight < t.viewport.scrollHeight;\n          i(c ? e : r);\n        }\n      }, 10);\n    return H(t.viewport, d), H(t.content, d), /*#__PURE__*/s.createElement(a, {\n      present: o || l\n    }, /*#__PURE__*/s.createElement(v, u({\n      \"data-state\": l ? \"visible\" : \"hidden\"\n    }, n, {\n      ref: r\n    })));\n  }),\n  v = /*#__PURE__*/s.forwardRef((e, r) => {\n    const {\n        orientation: t = \"vertical\",\n        ...o\n      } = e,\n      n = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n      l = s.useRef(null),\n      i = s.useRef(0),\n      [a, c] = s.useState({\n        content: 0,\n        viewport: 0,\n        scrollbar: {\n          size: 0,\n          paddingStart: 0,\n          paddingEnd: 0\n        }\n      }),\n      d = x(a.viewport, a.content),\n      p = {\n        ...o,\n        sizes: a,\n        onSizesChange: c,\n        hasThumb: Boolean(d > 0 && d < 1),\n        onThumbChange: e => l.current = e,\n        onThumbPointerUp: () => i.current = 0,\n        onThumbPointerDown: e => i.current = e\n      };\n    function f(e, r) {\n      return function (e, r, t, o = \"ltr\") {\n        const n = R(t),\n          l = n / 2,\n          i = r || l,\n          a = n - i,\n          c = t.scrollbar.paddingStart + i,\n          s = t.scrollbar.size - t.scrollbar.paddingEnd - a,\n          u = t.content - t.viewport;\n        return L([c, s], \"ltr\" === o ? [0, u] : [-1 * u, 0])(e);\n      }(e, i.current, a, r);\n    }\n    return \"horizontal\" === t ? /*#__PURE__*/s.createElement(S, u({}, p, {\n      ref: r,\n      onThumbPositionChange: () => {\n        if (n.viewport && l.current) {\n          const e = P(n.viewport.scrollLeft, a, n.dir);\n          l.current.style.transform = `translate3d(${e}px, 0, 0)`;\n        }\n      },\n      onWheelScroll: e => {\n        n.viewport && (n.viewport.scrollLeft = e);\n      },\n      onDragScroll: e => {\n        n.viewport && (n.viewport.scrollLeft = f(e, n.dir));\n      }\n    })) : \"vertical\" === t ? /*#__PURE__*/s.createElement(g, u({}, p, {\n      ref: r,\n      onThumbPositionChange: () => {\n        if (n.viewport && l.current) {\n          const e = P(n.viewport.scrollTop, a);\n          l.current.style.transform = `translate3d(0, ${e}px, 0)`;\n        }\n      },\n      onWheelScroll: e => {\n        n.viewport && (n.viewport.scrollTop = e);\n      },\n      onDragScroll: e => {\n        n.viewport && (n.viewport.scrollTop = f(e));\n      }\n    })) : null;\n  }),\n  S = /*#__PURE__*/s.forwardRef((e, r) => {\n    const {\n        sizes: t,\n        onSizesChange: o,\n        ...n\n      } = e,\n      i = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n      [a, c] = s.useState(),\n      d = s.useRef(null),\n      p = l(r, d, i.onScrollbarXChange);\n    return s.useEffect(() => {\n      d.current && c(getComputedStyle(d.current));\n    }, [d]), /*#__PURE__*/s.createElement(T, u({\n      \"data-orientation\": \"horizontal\"\n    }, n, {\n      ref: p,\n      sizes: t,\n      style: {\n        bottom: 0,\n        left: \"rtl\" === i.dir ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: \"ltr\" === i.dir ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        \"--radix-scroll-area-thumb-width\": R(t) + \"px\",\n        ...e.style\n      },\n      onThumbPointerDown: r => e.onThumbPointerDown(r.x),\n      onDragScroll: r => e.onDragScroll(r.x),\n      onWheelScroll: (r, t) => {\n        if (i.viewport) {\n          const o = i.viewport.scrollLeft + r.deltaX;\n          e.onWheelScroll(o), _(o, t) && r.preventDefault();\n        }\n      },\n      onResize: () => {\n        d.current && i.viewport && a && o({\n          content: i.viewport.scrollWidth,\n          viewport: i.viewport.offsetWidth,\n          scrollbar: {\n            size: d.current.clientWidth,\n            paddingStart: A(a.paddingLeft),\n            paddingEnd: A(a.paddingRight)\n          }\n        });\n      }\n    }));\n  }),\n  g = /*#__PURE__*/s.forwardRef((e, r) => {\n    const {\n        sizes: t,\n        onSizesChange: o,\n        ...n\n      } = e,\n      i = h(\"ScrollAreaScrollbar\", e.__scopeScrollArea),\n      [a, c] = s.useState(),\n      d = s.useRef(null),\n      p = l(r, d, i.onScrollbarYChange);\n    return s.useEffect(() => {\n      d.current && c(getComputedStyle(d.current));\n    }, [d]), /*#__PURE__*/s.createElement(T, u({\n      \"data-orientation\": \"vertical\"\n    }, n, {\n      ref: p,\n      sizes: t,\n      style: {\n        top: 0,\n        right: \"ltr\" === i.dir ? 0 : void 0,\n        left: \"rtl\" === i.dir ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        \"--radix-scroll-area-thumb-height\": R(t) + \"px\",\n        ...e.style\n      },\n      onThumbPointerDown: r => e.onThumbPointerDown(r.y),\n      onDragScroll: r => e.onDragScroll(r.y),\n      onWheelScroll: (r, t) => {\n        if (i.viewport) {\n          const o = i.viewport.scrollTop + r.deltaY;\n          e.onWheelScroll(o), _(o, t) && r.preventDefault();\n        }\n      },\n      onResize: () => {\n        d.current && i.viewport && a && o({\n          content: i.viewport.scrollHeight,\n          viewport: i.viewport.offsetHeight,\n          scrollbar: {\n            size: d.current.clientHeight,\n            paddingStart: A(a.paddingTop),\n            paddingEnd: A(a.paddingBottom)\n          }\n        });\n      }\n    }));\n  }),\n  [E, C] = d(\"ScrollAreaScrollbar\"),\n  T = /*#__PURE__*/s.forwardRef((r, t) => {\n    const {\n        __scopeScrollArea: o,\n        sizes: i,\n        hasThumb: a,\n        onThumbChange: d,\n        onThumbPointerUp: p,\n        onThumbPointerDown: f,\n        onThumbPositionChange: m,\n        onDragScroll: w,\n        onWheelScroll: b,\n        onResize: v,\n        ...S\n      } = r,\n      g = h(\"ScrollAreaScrollbar\", o),\n      [C, T] = s.useState(null),\n      y = l(t, e => T(e)),\n      A = s.useRef(null),\n      x = s.useRef(\"\"),\n      R = g.viewport,\n      P = i.content - i.viewport,\n      L = n(b),\n      _ = n(m),\n      D = z(v, 10);\n    function W(e) {\n      if (A.current) {\n        const r = e.clientX - A.current.left,\n          t = e.clientY - A.current.top;\n        w({\n          x: r,\n          y: t\n        });\n      }\n    }\n    return s.useEffect(() => {\n      const e = e => {\n        const r = e.target;\n        (null == C ? void 0 : C.contains(r)) && L(e, P);\n      };\n      return document.addEventListener(\"wheel\", e, {\n        passive: !1\n      }), () => document.removeEventListener(\"wheel\", e, {\n        passive: !1\n      });\n    }, [R, C, P, L]), s.useEffect(_, [i, _]), H(C, D), H(g.content, D), /*#__PURE__*/s.createElement(E, {\n      scope: o,\n      scrollbar: C,\n      hasThumb: a,\n      onThumbChange: n(d),\n      onThumbPointerUp: n(p),\n      onThumbPositionChange: _,\n      onThumbPointerDown: n(f)\n    }, /*#__PURE__*/s.createElement(c.div, u({}, S, {\n      ref: y,\n      style: {\n        position: \"absolute\",\n        ...S.style\n      },\n      onPointerDown: e(r.onPointerDown, e => {\n        if (0 === e.button) {\n          e.target.setPointerCapture(e.pointerId), A.current = C.getBoundingClientRect(), x.current = document.body.style.webkitUserSelect, document.body.style.webkitUserSelect = \"none\", W(e);\n        }\n      }),\n      onPointerMove: e(r.onPointerMove, W),\n      onPointerUp: e(r.onPointerUp, e => {\n        e.target.releasePointerCapture(e.pointerId), document.body.style.webkitUserSelect = x.current, A.current = null;\n      })\n    })));\n  });\nexport const ScrollAreaThumb = /*#__PURE__*/s.forwardRef((r, t) => {\n  const {\n      __scopeScrollArea: o,\n      style: n,\n      ...i\n    } = r,\n    a = h(\"ScrollbarThumb\", o),\n    d = C(\"ScrollbarThumb\", o),\n    {\n      onThumbPositionChange: p\n    } = d,\n    f = l(t, e => d.onThumbChange(e)),\n    m = s.useRef(),\n    w = z(() => {\n      m.current && (m.current(), m.current = void 0);\n    }, 100);\n  return s.useEffect(() => {\n    const e = a.viewport;\n    if (e) {\n      const r = () => {\n        if (w(), !m.current) {\n          const r = D(e, p);\n          m.current = r, p();\n        }\n      };\n      return p(), e.addEventListener(\"scroll\", r), () => e.removeEventListener(\"scroll\", r);\n    }\n  }, [a.viewport, w, p]), d.hasThumb ? /*#__PURE__*/s.createElement(c.div, u({}, i, {\n    ref: f,\n    style: {\n      width: \"var(--radix-scroll-area-thumb-width)\",\n      height: \"var(--radix-scroll-area-thumb-height)\",\n      ...n\n    },\n    onPointerDownCapture: e(r.onPointerDownCapture, e => {\n      const r = e.target.getBoundingClientRect(),\n        t = e.clientX - r.left,\n        o = e.clientY - r.top;\n      d.onThumbPointerDown({\n        x: t,\n        y: o\n      });\n    }),\n    onPointerUp: e(r.onPointerUp, d.onThumbPointerUp)\n  })) : null;\n}); /*#__PURE__*/\nexport const ScrollAreaCorner = /*#__PURE__*/s.forwardRef((e, r) => {\n  const t = h(\"ScrollAreaCorner\", e.__scopeScrollArea),\n    o = Boolean(t.scrollbarX && t.scrollbarY);\n  return \"scroll\" !== t.type && o ? /*#__PURE__*/s.createElement(y, u({}, e, {\n    ref: r\n  })) : null;\n}); /*#__PURE__*/\nconst y = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n      __scopeScrollArea: t,\n      ...o\n    } = e,\n    n = h(\"ScrollAreaCorner\", t),\n    [l, i] = s.useState(0),\n    [a, d] = s.useState(0),\n    p = Boolean(l && a);\n  return H(n.scrollbarX, () => {\n    var e;\n    const r = (null === (e = n.scrollbarX) || void 0 === e ? void 0 : e.offsetHeight) || 0;\n    n.onCornerHeightChange(r), d(r);\n  }), H(n.scrollbarY, () => {\n    var e;\n    const r = (null === (e = n.scrollbarY) || void 0 === e ? void 0 : e.offsetWidth) || 0;\n    n.onCornerWidthChange(r), i(r);\n  }), p ? /*#__PURE__*/s.createElement(c.div, u({}, o, {\n    ref: r,\n    style: {\n      width: l,\n      height: a,\n      position: \"absolute\",\n      right: \"ltr\" === n.dir ? 0 : void 0,\n      left: \"rtl\" === n.dir ? 0 : void 0,\n      bottom: 0,\n      ...e.style\n    }\n  })) : null;\n});\nfunction A(e) {\n  return e ? parseInt(e, 10) : 0;\n}\nfunction x(e, r) {\n  const t = e / r;\n  return isNaN(t) ? 0 : t;\n}\nfunction R(e) {\n  const r = x(e.viewport, e.content),\n    t = e.scrollbar.paddingStart + e.scrollbar.paddingEnd,\n    o = (e.scrollbar.size - t) * r;\n  return Math.max(o, 18);\n}\nfunction P(e, t, o = \"ltr\") {\n  const n = R(t),\n    l = t.scrollbar.paddingStart + t.scrollbar.paddingEnd,\n    i = t.scrollbar.size - l,\n    a = t.content - t.viewport,\n    c = i - n,\n    s = r(e, \"ltr\" === o ? [0, a] : [-1 * a, 0]);\n  return L([0, a], [0, c])(s);\n}\nfunction L(e, r) {\n  return t => {\n    if (e[0] === e[1] || r[0] === r[1]) return r[0];\n    const o = (r[1] - r[0]) / (e[1] - e[0]);\n    return r[0] + o * (t - e[0]);\n  };\n}\nfunction _(e, r) {\n  return e > 0 && e < r;\n}\nconst D = (e, r = () => {}) => {\n  let t = {\n      left: e.scrollLeft,\n      top: e.scrollTop\n    },\n    o = 0;\n  return function n() {\n    const l = {\n        left: e.scrollLeft,\n        top: e.scrollTop\n      },\n      i = t.left !== l.left,\n      a = t.top !== l.top;\n    (i || a) && r(), t = l, o = window.requestAnimationFrame(n);\n  }(), () => window.cancelAnimationFrame(o);\n};\nfunction z(e, r) {\n  const t = n(e),\n    o = s.useRef(0);\n  return s.useEffect(() => () => window.clearTimeout(o.current), []), s.useCallback(() => {\n    window.clearTimeout(o.current), o.current = window.setTimeout(t, r);\n  }, [t, r]);\n}\nfunction H(e, r) {\n  const o = n(r);\n  t(() => {\n    let r = 0;\n    if (e) {\n      const t = new ResizeObserver(() => {\n        cancelAnimationFrame(r), r = window.requestAnimationFrame(o);\n      });\n      return t.observe(e), () => {\n        window.cancelAnimationFrame(r), t.unobserve(e);\n      };\n    }\n  }, [e, o]);\n}\nexport const Root = ScrollArea;\nexport const Viewport = ScrollAreaViewport;\nexport const Scrollbar = ScrollAreaScrollbar;\nexport const Thumb = ScrollAreaThumb;\nexport const Corner = ScrollAreaCorner;","map":{"version":3,"names":["d","p","i","createScrollAreaScope","f","h","ScrollArea","s","forwardRef","e","r","__scopeScrollArea","t","type","n","scrollHideDelay","a","useState","m","w","b","v","S","g","E","C","T","y","A","x","R","P","L","_","l","D","o","dir","createElement","scope","scrollArea","viewport","onViewportChange","content","onContentChange","scrollbarX","onScrollbarXChange","scrollbarXEnabled","onScrollbarXEnabledChange","scrollbarY","onScrollbarYChange","scrollbarYEnabled","onScrollbarYEnabledChange","onCornerWidthChange","onCornerHeightChange","c","div","u","ref","style","position","ScrollAreaViewport","children","useRef","Fragment","dangerouslySetInnerHTML","__html","overflowX","overflowY","minWidth","display","ScrollAreaScrollbar","forceMount","orientation","useEffect","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","addEventListener","removeEventListener","present","z","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","useReducer","handleScroll","onPointerEnter","onPointerLeave","offsetWidth","scrollWidth","offsetHeight","scrollHeight","H","scrollbar","size","paddingStart","paddingEnd","sizes","onSizesChange","hasThumb","Boolean","onThumbChange","current","onThumbPointerUp","onThumbPointerDown","onThumbPositionChange","scrollLeft","transform","onWheelScroll","onDragScroll","scrollTop","getComputedStyle","bottom","left","right","deltaX","preventDefault","onResize","clientWidth","paddingLeft","paddingRight","top","deltaY","clientHeight","paddingTop","paddingBottom","W","clientX","clientY","target","contains","document","passive","onPointerDown","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","onPointerMove","onPointerUp","releasePointerCapture","ScrollAreaThumb","width","height","onPointerDownCapture","ScrollAreaCorner","parseInt","isNaN","Math","max","addUnlinkedScrollListener","handler","requestAnimationFrame","cancelAnimationFrame","useCallback","ResizeObserver","observe","unobserve","Root","Viewport","Scrollbar","Thumb","Corner"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\node_modules\\@radix-ui\\react-scroll-area\\dist\\packages\\react\\scroll-area\\src\\ScrollArea.tsx","C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\node_modules\\@radix-ui\\react-scroll-area\\dist\\packages\\react\\scroll-area\\src\\useStateMachine.ts"],"sourcesContent":["/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useDirection } from '@radix-ui/react-use-direction';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useStateMachine } from './useStateMachine';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Sizes = {\n  content: number;\n  viewport: number;\n  scrollbar: {\n    size: number;\n    paddingStart: number;\n    paddingEnd: number;\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_AREA_NAME = 'ScrollArea';\n\ntype ScopedProps<P> = P & { __scopeScrollArea?: Scope };\nconst [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\n\ntype ScrollAreaContextValue = {\n  type: 'auto' | 'always' | 'scroll' | 'hover';\n  dir: Direction;\n  scrollHideDelay: number;\n  scrollArea: ScrollAreaElement | null;\n  viewport: ScrollAreaViewportElement | null;\n  onViewportChange(viewport: ScrollAreaViewportElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: ScrollAreaScrollbarElement | null;\n  onScrollbarXChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: ScrollAreaScrollbarElement | null;\n  onScrollbarYChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n};\n\nconst [ScrollAreaProvider, useScrollAreaContext] =\n  createScrollAreaContext<ScrollAreaContextValue>(SCROLL_AREA_NAME);\n\ntype ScrollAreaElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ScrollAreaProps extends PrimitiveDivProps {\n  type?: ScrollAreaContextValue['type'];\n  dir?: ScrollAreaContextValue['dir'];\n  scrollHideDelay?: number;\n}\n\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>(\n  (props: ScopedProps<ScrollAreaProps>, forwardedRef) => {\n    const { __scopeScrollArea, type = 'hover', scrollHideDelay = 600, ...scrollAreaProps } = props;\n    const [scrollArea, setScrollArea] = React.useState<ScrollAreaElement | null>(null);\n    const [viewport, setViewport] = React.useState<ScrollAreaViewportElement | null>(null);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [scrollbarY, setScrollbarY] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [cornerWidth, setCornerWidth] = React.useState(0);\n    const [cornerHeight, setCornerHeight] = React.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const computedDirection = useDirection(scrollArea, scrollAreaProps.dir);\n\n    return (\n      <ScrollAreaProvider\n        scope={__scopeScrollArea}\n        type={type}\n        dir={computedDirection}\n        scrollHideDelay={scrollHideDelay}\n        scrollArea={scrollArea}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        content={content}\n        onContentChange={setContent}\n        scrollbarX={scrollbarX}\n        onScrollbarXChange={setScrollbarX}\n        scrollbarXEnabled={scrollbarXEnabled}\n        onScrollbarXEnabledChange={setScrollbarXEnabled}\n        scrollbarY={scrollbarY}\n        onScrollbarYChange={setScrollbarY}\n        scrollbarYEnabled={scrollbarYEnabled}\n        onScrollbarYEnabledChange={setScrollbarYEnabled}\n        onCornerWidthChange={setCornerWidth}\n        onCornerHeightChange={setCornerHeight}\n      >\n        <Primitive.div\n          {...scrollAreaProps}\n          ref={composedRefs}\n          style={{\n            position: 'relative',\n            // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n            ['--radix-scroll-area-corner-width' as any]: cornerWidth + 'px',\n            ['--radix-scroll-area-corner-height' as any]: cornerHeight + 'px',\n            ...props.style,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  }\n);\n\nScrollArea.displayName = SCROLL_AREA_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ScrollAreaViewport';\n\ntype ScrollAreaViewportElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaViewportProps extends PrimitiveDivProps {}\n\nconst ScrollAreaViewport = React.forwardRef<ScrollAreaViewportElement, ScrollAreaViewportProps>(\n  (props: ScopedProps<ScrollAreaViewportProps>, forwardedRef) => {\n    const { __scopeScrollArea, children, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React.useRef<ScrollAreaViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Primitive.div\n          data-radix-scroll-area-viewport=\"\"\n          {...viewportProps}\n          ref={composedRefs}\n          style={{\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n            overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n            ...props.style,\n          }}\n        >\n          {/**\n           * `display: table` ensures our content div will match the size of its children in both\n           * horizontal and vertical axis so we can determine if scroll width/height changed and\n           * recalculate thumb sizes. This doesn't account for children with *percentage*\n           * widths that change. We'll wait to see what use-cases consumers come up with there\n           * before trying to resolve it.\n           */}\n          <div ref={context.onContentChange} style={{ minWidth: '100%', display: 'table' }}>\n            {children}\n          </div>\n        </Primitive.div>\n      </>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLLBAR_NAME = 'ScrollAreaScrollbar';\n\ntype ScrollAreaScrollbarElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbar = React.forwardRef<ScrollAreaScrollbarElement, ScrollAreaScrollbarProps>(\n  (props: ScopedProps<ScrollAreaScrollbarProps>, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarHoverElement = ScrollAreaScrollbarAutoElement;\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarHover = React.forwardRef<\n  ScrollAreaScrollbarHoverElement,\n  ScrollAreaScrollbarHoverProps\n>((props: ScopedProps<ScrollAreaScrollbarHoverProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarAuto\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarScrollElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarScrollProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarScroll = React.forwardRef<\n  ScrollAreaScrollbarScrollElement,\n  ScrollAreaScrollbarScrollProps\n>((props: ScopedProps<ScrollAreaScrollbarScrollProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = useStateMachine('hidden', {\n    hidden: {\n      SCROLL: 'scrolling',\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting',\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle',\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting',\n    },\n  });\n\n  React.useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n\n  React.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n\n  return (\n    <Presence present={forceMount || state !== 'hidden'}>\n      <ScrollAreaScrollbarVisible\n        data-state={state === 'hidden' ? 'hidden' : 'visible'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER'))}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarAutoElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarAutoProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarAuto = React.forwardRef<\n  ScrollAreaScrollbarAutoElement,\n  ScrollAreaScrollbarAutoProps\n>((props: ScopedProps<ScrollAreaScrollbarAutoProps>, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React.useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarVisibleElement = ScrollAreaScrollbarAxisElement;\ninterface ScrollAreaScrollbarVisibleProps\n  extends Omit<ScrollAreaScrollbarAxisProps, keyof ScrollAreaScrollbarAxisPrivateProps> {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst ScrollAreaScrollbarVisible = React.forwardRef<\n  ScrollAreaScrollbarVisibleElement,\n  ScrollAreaScrollbarVisibleProps\n>((props: ScopedProps<ScrollAreaScrollbarVisibleProps>, forwardedRef) => {\n  const { orientation = 'vertical', ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React.useRef<ScrollAreaThumbElement | null>(null);\n  const pointerOffsetRef = React.useRef(0);\n  const [sizes, setSizes] = React.useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  type UncommonProps = 'onThumbPositionChange' | 'onDragScroll' | 'onWheelScroll';\n  const commonProps: Omit<ScrollAreaScrollbarAxisPrivateProps, UncommonProps> = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => (thumbRef.current = thumb),\n    onThumbPointerUp: () => (pointerOffsetRef.current = 0),\n    onThumbPointerDown: (pointerPos) => (pointerOffsetRef.current = pointerPos),\n  };\n\n  function getScrollPosition(pointerPos: number, dir?: Direction) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n\n  if (orientation === 'horizontal') {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === 'vertical') {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarAxisPrivateProps = {\n  hasThumb: boolean;\n  sizes: Sizes;\n  onSizesChange(sizes: Sizes): void;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerDown(pointerPos: number): void;\n  onThumbPointerUp(): void;\n  onThumbPositionChange(): void;\n  onWheelScroll(scrollPos: number): void;\n  onDragScroll(pointerPos: number): void;\n};\n\ntype ScrollAreaScrollbarAxisElement = ScrollAreaScrollbarImplElement;\ninterface ScrollAreaScrollbarAxisProps\n  extends Omit<ScrollAreaScrollbarImplProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarAxisPrivateProps {}\n\nconst ScrollAreaScrollbarX = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"horizontal\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        bottom: 0,\n        left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        ['--radix-scroll-area-thumb-width' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\nconst ScrollAreaScrollbarY = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"vertical\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        top: 0,\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 'var(--radix-scroll-area-corner-height)',\n        ['--radix-scroll-area-thumb-height' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollbarContext = {\n  hasThumb: boolean;\n  scrollbar: ScrollAreaScrollbarElement | null;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerUp(): void;\n  onThumbPointerDown(pointerPos: { x: number; y: number }): void;\n  onThumbPositionChange(): void;\n};\n\nconst [ScrollbarProvider, useScrollbarContext] =\n  createScrollAreaContext<ScrollbarContext>(SCROLLBAR_NAME);\n\ntype ScrollAreaScrollbarImplElement = React.ElementRef<typeof Primitive.div>;\ntype ScrollAreaScrollbarImplPrivateProps = {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContext['onThumbChange'];\n  onThumbPointerUp: ScrollbarContext['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContext['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContext['onThumbPositionChange'];\n  onWheelScroll(event: WheelEvent, maxScrollPos: number): void;\n  onDragScroll(pointerPos: { x: number; y: number }): void;\n  onResize(): void;\n};\ninterface ScrollAreaScrollbarImplProps\n  extends PrimitiveDivProps,\n    ScrollAreaScrollbarImplPrivateProps {}\n\nconst ScrollAreaScrollbarImpl = React.forwardRef<\n  ScrollAreaScrollbarImplElement,\n  ScrollAreaScrollbarImplProps\n>((props: ScopedProps<ScrollAreaScrollbarImplProps>, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React.useState<ScrollAreaScrollbarElement | null>(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<ClientRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  function handleDragScroll(event: React.PointerEvent<HTMLElement>) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n\n  /**\n   * We bind wheel event imperatively so we can switch off passive\n   * mode for document wheel event to allow it to be prevented\n   */\n  React.useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  /**\n   * Update thumb position on sizes change\n   */\n  React.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      scope={__scopeScrollArea}\n      scrollbar={scrollbar}\n      hasThumb={hasThumb}\n      onThumbChange={useCallbackRef(onThumbChange)}\n      onThumbPointerUp={useCallbackRef(onThumbPointerUp)}\n      onThumbPositionChange={handleThumbPositionChange}\n      onThumbPointerDown={useCallbackRef(onThumbPointerDown)}\n    >\n      <Primitive.div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            // pointer capture doesn't prevent text selection in Safari\n            // so we remove text selection manually when scrolling\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          element.releasePointerCapture(event.pointerId);\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'ScrollbarThumb';\n\ntype ScrollAreaThumbElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaThumbProps extends PrimitiveDivProps {}\n\nconst ScrollAreaThumb = React.forwardRef<ScrollAreaThumbElement, ScrollAreaThumbProps>(\n  (props: ScopedProps<ScrollAreaThumbProps>, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React.useRef<() => void>();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    React.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        /**\n         * We only bind to native scroll event so we know when scroll starts and ends.\n         * When scroll starts we start a requestAnimationFrame loop that checks for\n         * changes to scroll position. That rAF loop triggers our thumb position change\n         * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n         * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n         */\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener('scroll', handleScroll);\n        return () => viewport.removeEventListener('scroll', handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return scrollbarContext.hasThumb ? (\n      <Primitive.div\n        {...thumbProps}\n        ref={composedRef}\n        style={{\n          width: 'var(--radix-scroll-area-thumb-width)',\n          height: 'var(--radix-scroll-area-thumb-height)',\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target as HTMLElement;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n      />\n    ) : null;\n  }\n);\n\nScrollAreaThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\n\nconst CORNER_NAME = 'ScrollAreaCorner';\n\ntype ScrollAreaCornerElement = ScrollAreaCornerImplElement;\ninterface ScrollAreaCornerProps extends ScrollAreaCornerImplProps {}\n\nconst ScrollAreaCorner = React.forwardRef<ScrollAreaCornerElement, ScrollAreaCornerProps>(\n  (props: ScopedProps<ScrollAreaCornerProps>, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n    return hasCorner ? <ScrollAreaCornerImpl {...props} ref={forwardedRef} /> : null;\n  }\n);\n\nScrollAreaCorner.displayName = CORNER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaCornerImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaCornerImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaCornerImpl = React.forwardRef<\n  ScrollAreaCornerImplElement,\n  ScrollAreaCornerImplProps\n>((props: ScopedProps<ScrollAreaCornerImplProps>, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const hasSize = Boolean(width && height);\n\n  useResizeObserver(context.scrollbarX, () => {\n    const height = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n\n  useResizeObserver(context.scrollbarY, () => {\n    const width = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n\n  return hasSize ? (\n    <Primitive.div\n      {...cornerProps}\n      ref={forwardedRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 0,\n        ...props.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n\nfunction getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\n\nfunction getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\n\nfunction getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n\nfunction getThumbOffsetFromScroll(scrollPos: number, sizes: Sizes, dir: Direction = 'ltr') {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst addUnlinkedScrollListener = (node: HTMLElement, handler = () => {}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\n\nfunction useDebounceCallback(callback: () => void, delay: number) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React.useRef(0);\n  React.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ScrollArea;\nconst Viewport = ScrollAreaViewport;\nconst Scrollbar = ScrollAreaScrollbar;\nconst Thumb = ScrollAreaThumb;\nconst Corner = ScrollAreaCorner;\n\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n};\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n};\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}