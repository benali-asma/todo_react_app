{"ast":null,"code":"function findAncestor(element, className) {\n  let _element = element;\n  while ((_element = _element.parentElement) && !_element.classList.contains(className));\n  return _element;\n}\nfunction getContextItemIndex(options, node) {\n  if (!node) {\n    return -1;\n  }\n  return Array.from(findAncestor(node, options.parentClassName).querySelectorAll(options.elementSelector)).findIndex(element => element === node);\n}\nexport { getContextItemIndex };","map":{"version":3,"names":["findAncestor","element","className","_element","parentElement","classList","contains","getContextItemIndex","options","node","Array","from","parentClassName","querySelectorAll","elementSelector","findIndex"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\src\\utils\\get-context-item-index\\get-context-item-index.ts"],"sourcesContent":["/* eslint-disable no-cond-assign */\n\nfunction findAncestor(element: HTMLElement, className: string) {\n  let _element = element;\n  while ((_element = _element.parentElement) && !_element.classList.contains(className));\n  return _element;\n}\n\nexport function getContextItemIndex(\n  options: { elementSelector: string; parentClassName: string },\n  node: HTMLElement\n) {\n  if (!node) {\n    return -1;\n  }\n\n  return Array.from(\n    findAncestor(node, options.parentClassName).querySelectorAll(options.elementSelector)\n  ).findIndex((element) => element === node);\n}\n"],"mappings":"AAAA,SAASA,YAAYA,CAACC,OAAO,EAAEC,SAAS,EAAE;EACxC,IAAIC,QAAQ,GAAGF,OAAO;EACtB,OAAO,CAACE,QAAQ,GAAGA,QAAQ,CAACC,aAAa,KAAK,CAACD,QAAQ,CAACE,SAAS,CAACC,QAAQ,CAACJ,SAAS,CAAC,CACnF;EACF,OAAOC,QAAQ;AACjB;AACO,SAASI,mBAAmBA,CAACC,OAAO,EAAEC,IAAI,EAAE;EACjD,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,CAAC,CAAC;EACb;EACE,OAAOC,KAAK,CAACC,IAAI,CAACX,YAAY,CAACS,IAAI,EAAED,OAAO,CAACI,eAAe,CAAC,CAACC,gBAAgB,CAACL,OAAO,CAACM,eAAe,CAAC,CAAC,CAACC,SAAS,CAAEd,OAAO,IAAKA,OAAO,KAAKQ,IAAI,CAAC;AACnJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}