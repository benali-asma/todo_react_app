{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { clamp, assignRef, useMergedRef, useOs } from '@mantine/hooks';\nimport { useMantineDefaultProps } from '@mantine/styles';\nimport { TextInput } from '../TextInput/TextInput.js';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles.js';\nimport { getInputMode } from '../../utils/get-input-mode/get-input-mode.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultFormatter = value => value || \"\";\nconst defaultParser = num => {\n  if (num === \"-\") {\n    return num;\n  }\n  let tempNum = num;\n  if (tempNum[0] === \".\") {\n    tempNum = `0${num}`;\n  }\n  const parsedNum = parseFloat(tempNum);\n  if (Number.isNaN(parsedNum)) {\n    return void 0;\n  }\n  return num;\n};\nconst defaultProps = {\n  step: 1,\n  hideControls: false,\n  size: \"sm\",\n  precision: 0,\n  noClampOnBlur: false,\n  formatter: defaultFormatter,\n  parser: defaultParser\n};\nconst NumberInput = forwardRef((props, ref) => {\n  const _a = useMantineDefaultProps(\"NumberInput\", defaultProps, props),\n    {\n      disabled,\n      value,\n      onChange,\n      decimalSeparator,\n      min,\n      max,\n      step,\n      stepHoldInterval,\n      stepHoldDelay,\n      onBlur,\n      onFocus,\n      hideControls,\n      radius,\n      variant,\n      precision,\n      defaultValue,\n      noClampOnBlur,\n      handlersRef,\n      classNames,\n      styles,\n      size,\n      rightSection,\n      rightSectionWidth,\n      formatter,\n      parser\n    } = _a,\n    others = __objRest(_a, [\"disabled\", \"value\", \"onChange\", \"decimalSeparator\", \"min\", \"max\", \"step\", \"stepHoldInterval\", \"stepHoldDelay\", \"onBlur\", \"onFocus\", \"hideControls\", \"radius\", \"variant\", \"precision\", \"defaultValue\", \"noClampOnBlur\", \"handlersRef\", \"classNames\", \"styles\", \"size\", \"rightSection\", \"rightSectionWidth\", \"formatter\", \"parser\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    radius,\n    size\n  }, {\n    classNames,\n    styles,\n    name: \"NumberInput\"\n  });\n  const [focused, setFocused] = useState(false);\n  const [_value, setValue] = useState(typeof value === \"number\" ? value : typeof defaultValue === \"number\" ? defaultValue : void 0);\n  const finalValue = typeof value === \"number\" ? value : _value;\n  const [tempValue, setTempValue] = useState(typeof finalValue === \"number\" ? finalValue.toFixed(precision) : \"\");\n  const inputRef = useRef();\n  const handleValueChange = val => {\n    typeof onChange === \"function\" && onChange(val);\n    setValue(val);\n  };\n  const formatNum = (val = \"\") => {\n    let parsedStr = typeof val === \"number\" ? String(val) : val;\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n    }\n    return formatter(parsedStr);\n  };\n  const parseNum = val => {\n    let num = val;\n    if (decimalSeparator) {\n      num = num.replace(new RegExp(`\\\\${decimalSeparator}`, \"g\"), \".\");\n    }\n    return parser(num);\n  };\n  const _min = typeof min === \"number\" ? min : -Infinity;\n  const _max = typeof max === \"number\" ? max : Infinity;\n  const incrementRef = useRef();\n  incrementRef.current = () => {\n    var _a2;\n    if (_value === void 0) {\n      handleValueChange(min != null ? min : 0);\n      setTempValue((_a2 = min == null ? void 0 : min.toFixed(precision)) != null ? _a2 : \"0\");\n    } else {\n      const result = clamp({\n        value: _value + step,\n        min: _min,\n        max: _max\n      }).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n  const decrementRef = useRef();\n  decrementRef.current = () => {\n    var _a2;\n    if (_value === void 0) {\n      handleValueChange(min != null ? min : 0);\n      setTempValue((_a2 = min == null ? void 0 : min.toFixed(precision)) != null ? _a2 : \"0\");\n    } else {\n      const result = clamp({\n        value: _value - step,\n        min: _min,\n        max: _max\n      }).toFixed(precision);\n      handleValueChange(parseFloat(result));\n      setTempValue(result);\n    }\n  };\n  assignRef(handlersRef, {\n    increment: incrementRef.current,\n    decrement: decrementRef.current\n  });\n  useEffect(() => {\n    if (typeof value === \"number\" && !focused) {\n      setValue(value);\n      setTempValue(value.toFixed(precision));\n    }\n    if (defaultValue === void 0 && value === void 0 && !focused) {\n      setValue(value);\n      setTempValue(\"\");\n    }\n  }, [value]);\n  const shouldUseStepInterval = stepHoldDelay !== void 0 && stepHoldInterval !== void 0;\n  const onStepTimeoutRef = useRef(null);\n  const stepCountRef = useRef(0);\n  const onStepDone = () => {\n    if (onStepTimeoutRef.current) {\n      window.clearTimeout(onStepTimeoutRef.current);\n    }\n    onStepTimeoutRef.current = null;\n    stepCountRef.current = 0;\n  };\n  const onStepHandleChange = isIncrement => {\n    if (isIncrement) {\n      incrementRef.current();\n    } else {\n      decrementRef.current();\n    }\n    stepCountRef.current += 1;\n  };\n  const onStepLoop = isIncrement => {\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      const interval = typeof stepHoldInterval === \"number\" ? stepHoldInterval : stepHoldInterval(stepCountRef.current);\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n    }\n  };\n  const onStep = (event, isIncrement) => {\n    event.preventDefault();\n    inputRef.current.focus();\n    onStepHandleChange(isIncrement);\n    if (shouldUseStepInterval) {\n      onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n    }\n  };\n  useEffect(() => {\n    onStepDone();\n    return onStepDone;\n  }, []);\n  const controls = /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.rightSection\n  }, /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue >= max,\n    className: cx(classes.control, classes.controlUp),\n    onMouseDown: event => {\n      onStep(event, true);\n    },\n    onMouseUp: onStepDone,\n    onMouseLeave: onStepDone\n  }), /* @__PURE__ */React.createElement(\"button\", {\n    type: \"button\",\n    tabIndex: -1,\n    \"aria-hidden\": true,\n    disabled: finalValue <= min,\n    className: cx(classes.control, classes.controlDown),\n    onMouseDown: event => {\n      onStep(event, false);\n    },\n    onMouseUp: onStepDone,\n    onMouseLeave: onStepDone\n  }));\n  const handleChange = event => {\n    const val = event.target.value;\n    const parsed = parseNum(val);\n    setTempValue(parsed);\n    if (val === \"\" || val === \"-\") {\n      handleValueChange(void 0);\n    } else {\n      val.trim() !== \"\" && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n    }\n  };\n  const handleBlur = event => {\n    var _a2;\n    if (event.target.value === \"\") {\n      setTempValue(\"\");\n      handleValueChange(void 0);\n    } else {\n      let newNumber = event.target.value;\n      if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === \".\") {\n        newNumber = `0${newNumber}`;\n      }\n      const parsedVal = parseNum(newNumber);\n      const val = clamp({\n        value: parseFloat(parsedVal),\n        min: _min,\n        max: _max\n      });\n      if (!Number.isNaN(val)) {\n        if (!noClampOnBlur) {\n          setTempValue(val.toFixed(precision));\n          handleValueChange(parseFloat(val.toFixed(precision)));\n        }\n      } else {\n        setTempValue((_a2 = finalValue == null ? void 0 : finalValue.toFixed(precision)) != null ? _a2 : \"\");\n      }\n    }\n    setFocused(false);\n    typeof onBlur === \"function\" && onBlur(event);\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    typeof onFocus === \"function\" && onFocus(event);\n  };\n  const handleKeyDown = event => {\n    if (event.repeat && shouldUseStepInterval && (event.key === \"ArrowUp\" || event.key === \"ArrowDown\")) {\n      event.preventDefault();\n      return;\n    }\n    if (event.key === \"ArrowUp\") {\n      onStep(event, true);\n    } else if (event.key === \"ArrowDown\") {\n      onStep(event, false);\n    }\n  };\n  const handleKeyUp = event => {\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n      onStepDone();\n    }\n  };\n  return /* @__PURE__ */React.createElement(TextInput, __spreadProps(__spreadValues({}, others), {\n    variant,\n    value: formatNum(tempValue),\n    disabled,\n    ref: useMergedRef(inputRef, ref),\n    type: \"text\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    rightSection: rightSection || (disabled || hideControls || variant === \"unstyled\" ? null : controls),\n    rightSectionWidth: rightSectionWidth || theme.fn.size({\n      size,\n      sizes: CONTROL_SIZES\n    }) + 1,\n    radius,\n    max,\n    min,\n    step,\n    size,\n    styles,\n    classNames,\n    inputMode: getInputMode(step, precision, useOs()),\n    __staticSelector: \"NumberInput\"\n  }));\n});\nNumberInput.displayName = \"@mantine/core/NumberInput\";\nexport { NumberInput };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFormatter","defaultParser","num","tempNum","parsedNum","parseFloat","Number","isNaN","defaultProps","step","hideControls","size","precision","noClampOnBlur","formatter","parser","NumberInput","forwardRef","props","ref","_a","useMantineDefaultProps","disabled","onChange","decimalSeparator","min","max","stepHoldInterval","stepHoldDelay","onBlur","onFocus","radius","variant","defaultValue","handlersRef","classNames","styles","rightSection","rightSectionWidth","others","classes","cx","theme","useStyles","name","focused","setFocused","useState","_value","setValue","finalValue","tempValue","setTempValue","toFixed","inputRef","useRef","handleValueChange","val","formatNum","parsedStr","String","replace","parseNum","RegExp","_min","Infinity","_max","incrementRef","current","_a2","result","clamp","decrementRef","assignRef","increment","decrement","useEffect","shouldUseStepInterval","onStepTimeoutRef","stepCountRef","onStepDone","window","clearTimeout","onStepHandleChange","isIncrement","onStepLoop","interval","setTimeout","onStep","event","preventDefault","focus","controls","React","createElement","className","type","tabIndex","control","controlUp","onMouseDown","onMouseUp","onMouseLeave","controlDown","handleChange","parsed","trim","handleBlur","newNumber","parsedVal","handleFocus","handleKeyDown","repeat","handleKeyUp","TextInput","useMergedRef","onKeyDown","onKeyUp","fn","sizes","CONTROL_SIZES","inputMode","getInputMode","useOs","__staticSelector","displayName"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\src\\components\\NumberInput\\NumberInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useMergedRef, assignRef, clamp, useOs } from '@mantine/hooks';\nimport { DefaultProps, Selectors, useMantineDefaultProps } from '@mantine/styles';\nimport { getInputMode } from '../../utils';\nimport { TextInput } from '../TextInput/TextInput';\nimport { InputStylesNames } from '../Input/Input';\nimport { InputWrapperStylesNames } from '../InputWrapper/InputWrapper';\nimport useStyles, { CONTROL_SIZES } from './NumberInput.styles';\n\nexport type InnerNumberInputStylesNames = Selectors<typeof useStyles>;\nexport type NumberInputStylesNames =\n  | InputStylesNames\n  | InputWrapperStylesNames\n  | InnerNumberInputStylesNames;\n\nexport interface NumberInputHandlers {\n  increment(): void;\n  decrement(): void;\n}\n\ntype Formatter = (value: string | undefined) => string;\ntype Parser = (value: string | undefined) => string | undefined;\n\nexport interface NumberInputProps\n  extends DefaultProps<NumberInputStylesNames>,\n    Omit<\n      React.ComponentPropsWithoutRef<typeof TextInput>,\n      'onChange' | 'value' | 'classNames' | 'styles' | 'type'\n    > {\n  /** onChange input handler for controlled variant, note that input event is not exposed. It will return undefined if the input is empty, otherwise it'll return a number */\n  onChange?(value: number | undefined): void;\n\n  /** Input value for controlled variant */\n  value?: number | undefined;\n\n  /** The decimal separator */\n  decimalSeparator?: string;\n\n  /** Maximum possible value */\n  max?: number;\n\n  /** Minimal possible value */\n  min?: number;\n\n  /** Number by which value will be incremented/decremented with controls and up/down arrows */\n  step?: number;\n\n  /** Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds. */\n  stepHoldInterval?: number | ((stepCount: number) => number);\n\n  /** Initial delay in milliseconds before stepping the value. */\n  stepHoldDelay?: number;\n\n  /** Removes increment/decrement controls */\n  hideControls?: boolean;\n\n  /** Amount of digits after the decimal point  */\n  precision?: number;\n\n  /** Default value for uncontrolled variant only */\n  defaultValue?: number | undefined;\n\n  /** Prevent value clamp on blur */\n  noClampOnBlur?: boolean;\n\n  /** Get increment/decrement handlers */\n  handlersRef?: React.ForwardedRef<NumberInputHandlers | undefined>;\n\n  /** Formats the number into the input */\n  formatter?: Formatter;\n\n  /** Parses the value from formatter, should be used with formatter at the same time */\n  parser?: Parser;\n}\n\nconst defaultFormatter: Formatter = (value) => value || '';\nconst defaultParser: Parser = (num) => {\n  if (num === '-') {\n    return num;\n  }\n\n  let tempNum = num;\n\n  if (tempNum[0] === '.') {\n    tempNum = `0${num}`;\n  }\n\n  const parsedNum = parseFloat(tempNum);\n\n  if (Number.isNaN(parsedNum)) {\n    return undefined;\n  }\n\n  return num;\n};\n\nconst defaultProps: Partial<NumberInputProps> = {\n  step: 1,\n  hideControls: false,\n  size: 'sm',\n  precision: 0,\n  noClampOnBlur: false,\n  formatter: defaultFormatter,\n  parser: defaultParser,\n};\n\nexport const NumberInput = forwardRef<HTMLInputElement, NumberInputProps>(\n  (props: NumberInputProps, ref) => {\n    const {\n      disabled,\n      value,\n      onChange,\n      decimalSeparator,\n      min,\n      max,\n      step,\n      stepHoldInterval,\n      stepHoldDelay,\n      onBlur,\n      onFocus,\n      hideControls,\n      radius,\n      variant,\n      precision,\n      defaultValue,\n      noClampOnBlur,\n      handlersRef,\n      classNames,\n      styles,\n      size,\n      rightSection,\n      rightSectionWidth,\n      formatter,\n      parser,\n      ...others\n    } = useMantineDefaultProps('NumberInput', defaultProps, props);\n\n    const { classes, cx, theme } = useStyles(\n      { radius, size },\n      { classNames, styles, name: 'NumberInput' }\n    );\n\n    const [focused, setFocused] = useState(false);\n    const [_value, setValue] = useState(\n      typeof value === 'number'\n        ? value\n        : typeof defaultValue === 'number'\n        ? defaultValue\n        : undefined\n    );\n    const finalValue = typeof value === 'number' ? value : _value;\n    const [tempValue, setTempValue] = useState(\n      typeof finalValue === 'number' ? finalValue.toFixed(precision) : ''\n    );\n    const inputRef = useRef<HTMLInputElement>();\n    const handleValueChange = (val: number | undefined) => {\n      typeof onChange === 'function' && onChange(val);\n      setValue(val);\n    };\n\n    const formatNum = (val: string | number = '') => {\n      let parsedStr = typeof val === 'number' ? String(val) : val;\n\n      if (decimalSeparator) {\n        parsedStr = parsedStr.replace(/\\./g, decimalSeparator);\n      }\n\n      return formatter(parsedStr);\n    };\n\n    const parseNum = (val: string): string | undefined => {\n      let num = val;\n\n      if (decimalSeparator) {\n        num = num.replace(new RegExp(`\\\\${decimalSeparator}`, 'g'), '.');\n      }\n\n      return parser(num);\n    };\n\n    const _min = typeof min === 'number' ? min : -Infinity;\n    const _max = typeof max === 'number' ? max : Infinity;\n\n    const incrementRef = useRef<() => void>();\n    incrementRef.current = () => {\n      if (_value === undefined) {\n        handleValueChange(min ?? 0);\n        setTempValue(min?.toFixed(precision) ?? '0');\n      } else {\n        const result = clamp({ value: _value + step, min: _min, max: _max }).toFixed(precision);\n\n        handleValueChange(parseFloat(result));\n        setTempValue(result);\n      }\n    };\n\n    const decrementRef = useRef<() => void>();\n    decrementRef.current = () => {\n      if (_value === undefined) {\n        handleValueChange(min ?? 0);\n        setTempValue(min?.toFixed(precision) ?? '0');\n      } else {\n        const result = clamp({ value: _value - step, min: _min, max: _max }).toFixed(precision);\n        handleValueChange(parseFloat(result));\n        setTempValue(result);\n      }\n    };\n\n    assignRef(handlersRef, { increment: incrementRef.current, decrement: decrementRef.current });\n\n    useEffect(() => {\n      if (typeof value === 'number' && !focused) {\n        setValue(value);\n        setTempValue(value.toFixed(precision));\n      }\n      if (defaultValue === undefined && value === undefined && !focused) {\n        setValue(value);\n        setTempValue('');\n      }\n    }, [value]);\n\n    const shouldUseStepInterval = stepHoldDelay !== undefined && stepHoldInterval !== undefined;\n    const onStepTimeoutRef = useRef<number>(null);\n    const stepCountRef = useRef<number>(0);\n\n    const onStepDone = () => {\n      if (onStepTimeoutRef.current) {\n        window.clearTimeout(onStepTimeoutRef.current);\n      }\n      onStepTimeoutRef.current = null;\n      stepCountRef.current = 0;\n    };\n\n    const onStepHandleChange = (isIncrement: boolean) => {\n      if (isIncrement) {\n        incrementRef.current();\n      } else {\n        decrementRef.current();\n      }\n      stepCountRef.current += 1;\n    };\n\n    const onStepLoop = (isIncrement: boolean) => {\n      onStepHandleChange(isIncrement);\n\n      if (shouldUseStepInterval) {\n        const interval =\n          typeof stepHoldInterval === 'number'\n            ? stepHoldInterval\n            : stepHoldInterval(stepCountRef.current);\n        onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), interval);\n      }\n    };\n\n    const onStep = (\n      event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n      isIncrement: boolean\n    ) => {\n      event.preventDefault();\n      inputRef.current.focus();\n      onStepHandleChange(isIncrement);\n      if (shouldUseStepInterval) {\n        onStepTimeoutRef.current = window.setTimeout(() => onStepLoop(isIncrement), stepHoldDelay);\n      }\n    };\n\n    useEffect(() => {\n      onStepDone();\n      return onStepDone;\n    }, []);\n\n    const controls = (\n      <div className={classes.rightSection}>\n        <button\n          type=\"button\"\n          tabIndex={-1}\n          aria-hidden\n          disabled={finalValue >= max}\n          className={cx(classes.control, classes.controlUp)}\n          onMouseDown={(event) => {\n            onStep(event, true);\n          }}\n          onMouseUp={onStepDone}\n          onMouseLeave={onStepDone}\n        />\n        <button\n          type=\"button\"\n          tabIndex={-1}\n          aria-hidden\n          disabled={finalValue <= min}\n          className={cx(classes.control, classes.controlDown)}\n          onMouseDown={(event) => {\n            onStep(event, false);\n          }}\n          onMouseUp={onStepDone}\n          onMouseLeave={onStepDone}\n        />\n      </div>\n    );\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const val = event.target.value;\n      const parsed = parseNum(val);\n\n      setTempValue(parsed);\n\n      if (val === '' || val === '-') {\n        handleValueChange(undefined);\n      } else {\n        val.trim() !== '' && !Number.isNaN(parsed) && handleValueChange(parseFloat(parsed));\n      }\n    };\n\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n      if (event.target.value === '') {\n        setTempValue('');\n        handleValueChange(undefined);\n      } else {\n        let newNumber = event.target.value;\n\n        /** Unshifting zero to handle the following case -\n         * parseFloat('....1212') -> NaN\n         * parseFloat('0....1212') -> 0\n         */\n        if (newNumber[0] === `${decimalSeparator}` || newNumber[0] === '.') {\n          newNumber = `0${newNumber}`;\n        }\n\n        const parsedVal = parseNum(newNumber);\n        const val = clamp({ value: parseFloat(parsedVal), min: _min, max: _max });\n\n        if (!Number.isNaN(val)) {\n          if (!noClampOnBlur) {\n            setTempValue(val.toFixed(precision));\n            handleValueChange(parseFloat(val.toFixed(precision)));\n          }\n        } else {\n          setTempValue(finalValue?.toFixed(precision) ?? '');\n        }\n      }\n\n      setFocused(false);\n      typeof onBlur === 'function' && onBlur(event);\n    };\n\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      setFocused(true);\n      typeof onFocus === 'function' && onFocus(event);\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (\n        event.repeat &&\n        shouldUseStepInterval &&\n        (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n      ) {\n        event.preventDefault();\n        return;\n      }\n\n      if (event.key === 'ArrowUp') {\n        onStep(event, true);\n      } else if (event.key === 'ArrowDown') {\n        onStep(event, false);\n      }\n    };\n\n    const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n        onStepDone();\n      }\n    };\n\n    return (\n      <TextInput\n        {...others}\n        variant={variant}\n        value={formatNum(tempValue)}\n        disabled={disabled}\n        ref={useMergedRef(inputRef, ref)}\n        type=\"text\"\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        rightSection={\n          rightSection || (disabled || hideControls || variant === 'unstyled' ? null : controls)\n        }\n        rightSectionWidth={rightSectionWidth || theme.fn.size({ size, sizes: CONTROL_SIZES }) + 1}\n        radius={radius}\n        max={max}\n        min={min}\n        step={step}\n        size={size}\n        styles={styles}\n        classNames={classNames}\n        inputMode={getInputMode(step, precision, useOs())}\n        __staticSelector=\"NumberInput\"\n      />\n    );\n  }\n);\n\nNumberInput.displayName = '@mantine/core/NumberInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}