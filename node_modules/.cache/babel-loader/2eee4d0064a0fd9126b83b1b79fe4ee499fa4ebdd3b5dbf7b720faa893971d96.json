{"ast":null,"code":"import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.js';\nfunction useFocusReturn({\n  opened,\n  transitionDuration,\n  shouldReturnFocus = true\n}) {\n  const lastActiveElement = useRef();\n  const returnFocus = () => {\n    var _a;\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      (_a = lastActiveElement.current) == null ? void 0 : _a.focus();\n    }\n  };\n  useDidUpdate(() => {\n    let timeout = -1;\n    const clearFocusTimeout = event => {\n      if (event.code === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, transitionDuration + 10);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened]);\n  return returnFocus;\n}\nexport { useFocusReturn };","map":{"version":3,"names":["useFocusReturn","opened","transitionDuration","shouldReturnFocus","lastActiveElement","useRef","returnFocus","_a","current","focus","useDidUpdate","timeout","clearFocusTimeout","event","code","window","clearTimeout","document","addEventListener","activeElement","setTimeout","removeEventListener"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\hooks\\src\\use-focus-return\\use-focus-return.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  transitionDuration: number;\n  shouldReturnFocus?: boolean;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({\n  opened,\n  transitionDuration,\n  shouldReturnFocus = true,\n}: UseFocusReturn) {\n  const lastActiveElement = useRef<HTMLElement>();\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus();\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.code === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, transitionDuration + 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened]);\n\n  return returnFocus;\n}\n"],"mappings":";;AAEO,SAASA,cAAcA,CAAC;EAC7BC,MAAM;EACNC,kBAAkB;EAClBC,iBAAiB,GAAG;AACtB,CAAC,EAAE;EACD,MAAMC,iBAAiB,GAAGC,MAAM,EAAE;EAClC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,EAAE;IACN,IAAIH,iBAAiB,CAACI,OAAO,IAAI,OAAO,IAAIJ,iBAAiB,CAACI,OAAO,IAAI,OAAOJ,iBAAiB,CAACI,OAAO,CAACC,KAAK,KAAK,UAAU,EAAE;MAC9H,CAACF,EAAE,GAAGH,iBAAiB,CAACI,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,KAAK,EAAE;IACpE;EACA,CAAG;EACDC,YAAY,CAAC,MAAM;IACjB,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;MACnC,IAAIA,KAAK,CAACC,IAAI,KAAK,KAAK,EAAE;QACxBC,MAAM,CAACC,YAAY,CAACL,OAAO,CAAC;MACpC;IACA,CAAK;IACDM,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEN,iBAAiB,CAAC;IACvD,IAAIX,MAAM,EAAE;MACVG,iBAAiB,CAACI,OAAO,GAAGS,QAAQ,CAACE,aAAa;IACxD,CAAK,MAAM,IAAIhB,iBAAiB,EAAE;MAC5BQ,OAAO,GAAGI,MAAM,CAACK,UAAU,CAACd,WAAW,EAAEJ,kBAAkB,GAAG,EAAE,CAAC;IACvE;IACI,OAAO,MAAM;MACXa,MAAM,CAACC,YAAY,CAACL,OAAO,CAAC;MAC5BM,QAAQ,CAACI,mBAAmB,CAAC,SAAS,EAAET,iBAAiB,CAAC;IAChE,CAAK;EACL,CAAG,EAAE,CAACX,MAAM,CAAC,CAAC;EACZ,OAAOK,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}