{"ast":null,"code":"import * as e from \"react\";\nexport function useDirection(t, n) {\n  const [r, o] = e.useState(\"ltr\"),\n    [i, u] = e.useState(),\n    c = e.useRef(0);\n  return e.useEffect(() => {\n    if (void 0 === n && null != t && t.parentElement) {\n      const e = getComputedStyle(t.parentElement);\n      u(e);\n    }\n  }, [t, n]), e.useEffect(() => (void 0 === n && function e() {\n    c.current = requestAnimationFrame(() => {\n      const t = null == i ? void 0 : i.direction;\n      t && o(t), e();\n    });\n  }(), () => cancelAnimationFrame(c.current)), [i, n, o]), n || r;\n}","map":{"version":3,"names":["useDirection","t","n","r","o","e","useState","i","u","c","useRef","useEffect","parentElement","getComputedStyle","current","requestAnimationFrame","direction","cancelAnimationFrame"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\node_modules\\@radix-ui\\react-scroll-area\\node_modules\\@radix-ui\\react-use-direction\\dist\\packages\\react\\use-direction\\src\\useDirection.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\n\nexport function useDirection(element: HTMLElement | null, directionProp?: Direction) {\n  const [direction, setDirection] = React.useState<Direction>('ltr');\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const rAFRef = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    // We check inherited direction of the parent instead of the `element` itself.\n    // This is because we internally set the computed `dir` on the element so wouldn't be\n    // able to react to changes to the inherited direction. The `dir` attribute we set should\n    // always sync with the direction prop OR its inherited direction.\n    if (directionProp === undefined && element?.parentElement) {\n      const computedStyle = getComputedStyle(element.parentElement);\n      setComputedStyle(computedStyle);\n    }\n  }, [element, directionProp]);\n\n  React.useEffect(() => {\n    function getDirection() {\n      rAFRef.current = requestAnimationFrame(() => {\n        const dir = computedStyle?.direction as Direction | '' | undefined;\n        if (dir) setDirection(dir);\n        getDirection();\n      });\n    }\n\n    if (directionProp === undefined) getDirection();\n    return () => cancelAnimationFrame(rAFRef.current);\n  }, [computedStyle, directionProp, setDirection]);\n\n  return directionProp || direction;\n}\n"],"mappings":";OAIO,SAASA,aAAaC,CAAA,EAA6BC,CAAA;EACxD,OAAOC,CAAA,EAAWC,CAAA,IAAgBC,CAAA,CAAMC,QAAA,CAAoB;IAAA,CACrDC,CAAA,EAAeC,CAAA,IAAoBH,CAAA,CAAMC,QAAA;IAC1CG,CAAA,GAASJ,CAAA,CAAMK,MAAA,CAAe;EA0BpC,OAxBAL,CAAA,CAAMM,SAAA,CAAU;IAKd,SAAsB,MAAlBT,CAAA,YAA+BD,CAAA,IAAAA,CAAA,CAASW,aAAA,EAAe;MACzD,MAAMP,CAAA,GAAgBQ,gBAAA,CAAiBZ,CAAA,CAAQW,aAAA;MAC/CJ,CAAA,CAAiBH,CAAA;IAAA;EAAA,GAElB,CAACJ,CAAA,EAASC,CAAA,IAEbG,CAAA,CAAMM,SAAA,CAAU,YASQ,MAAlBT,CAAA,IARJ,SAASG,EAAA;IACPI,CAAA,CAAOK,OAAA,GAAUC,qBAAA,CAAsB;MACrC,MAAMd,CAAA,GAAM,QAAAM,CAAA,QAAH,IAAGA,CAAA,CAAeS,SAAA;MACvBf,CAAA,IAAKG,CAAA,CAAaH,CAAA,GACtBI,CAAA;IAAA;EAAA,CAI6B,IAC1B,MAAMY,oBAAA,CAAqBR,CAAA,CAAOK,OAAA,IACxC,CAACP,CAAA,EAAeL,CAAA,EAAeE,CAAA,IAE3BF,CAAA,IAAiBC,CAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}