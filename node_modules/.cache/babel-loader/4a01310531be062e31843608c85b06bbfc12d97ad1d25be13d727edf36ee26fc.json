{"ast":null,"code":"import { useCallback } from 'react';\nimport { assignRef } from '../utils/assign-ref/assign-ref.js';\nfunction useMergedRef(...refs) {\n  return useCallback(node => {\n    refs.forEach(ref => assignRef(ref, node));\n  }, refs);\n}\nfunction mergeRefs(...refs) {\n  return node => {\n    refs.forEach(ref => assignRef(ref, node));\n  };\n}\nexport { mergeRefs, useMergedRef };","map":{"version":3,"names":["useMergedRef","refs","useCallback","node","forEach","ref","assignRef","mergeRefs"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\hooks\\src\\use-merged-ref\\use-merged-ref.ts"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { assignRef } from '../utils';\n\ntype Ref<T> = React.Dispatch<React.SetStateAction<T>> | React.ForwardedRef<T>;\n\nexport function useMergedRef<T = any>(...refs: Ref<T>[]) {\n  return useCallback((node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  }, refs);\n}\n\nexport function mergeRefs<T = any>(...refs: Ref<T>[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n"],"mappings":";;AAEO,SAASA,YAAYA,CAAC,GAAGC,IAAI,EAAE;EACpC,OAAOC,WAAW,CAAEC,IAAI,IAAK;IAC3BF,IAAI,CAACG,OAAO,CAAEC,GAAG,IAAKC,SAAS,CAACD,GAAG,EAAEF,IAAI,CAAC,CAAC;EAC/C,CAAG,EAAEF,IAAI,CAAC;AACV;AACO,SAASM,SAASA,CAAC,GAAGN,IAAI,EAAE;EACjC,OAAQE,IAAI,IAAK;IACfF,IAAI,CAACG,OAAO,CAAEC,GAAG,IAAKC,SAAS,CAACD,GAAG,EAAEF,IAAI,CAAC,CAAC;EAC/C,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}