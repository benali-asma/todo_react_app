{"ast":null,"code":"import { Slot as e } from \"@radix-ui/react-slot\";\nimport * as r from \"react\";\nimport t from \"@babel/runtime/helpers/esm/extends\";\nexport const Primitive = [\"a\", \"button\", \"div\", \"h2\", \"h3\", \"img\", \"li\", \"nav\", \"ol\", \"p\", \"span\", \"svg\", \"ul\"].reduce((o, i) => ({\n  ...o,\n  [i]: /*#__PURE__*/r.forwardRef((o, m) => {\n    const {\n        asChild: a,\n        ...s\n      } = o,\n      n = a ? e : i;\n    return r.useEffect(() => {\n      window[Symbol.for(\"radix-ui\")] = !0;\n    }, []), /*#__PURE__*/r.createElement(n, t({}, s, {\n      ref: m\n    }));\n  })\n}), {});\nexport const Root = Primitive;","map":{"version":3,"names":["Primitive","reduce","o","i","r","forwardRef","m","asChild","a","s","n","e","useEffect","window","Symbol","for","createElement","t","ref","Root"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\node_modules\\@radix-ui\\react-scroll-area\\node_modules\\@radix-ui\\react-primitive\\dist\\packages\\react\\primitive\\src\\Primitive.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'h2',\n  'h3',\n  'img',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce(\n  (primitive, node) => ({\n    ...primitive,\n    [node]: React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n      const { asChild, ...primitiveProps } = props;\n      const Comp: any = asChild ? Slot : node;\n\n      React.useEffect(() => {\n        (window as any)[Symbol.for('radix-ui')] = true;\n      }, []);\n\n      // DEPRECATED\n      if (process.env.NODE_ENV === 'development' && (props as any).as) {\n        console.warn(AS_ERROR);\n      }\n\n      return <Comp {...primitiveProps} ref={forwardedRef} />;\n    }),\n  }),\n  {} as Primitives\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst AS_ERROR = `Warning: The \\`as\\` prop has been removed in favour of \\`asChild\\`. For details, see https://radix-ui.com/docs/primitives/overview/styling#changing-the-rendered-element`;\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n"],"mappings":";;;OAuCA,MAAMA,SAAA,GApCQ,CACZ,KACA,UACA,OACA,MACA,MACA,OACA,MACA,OACA,MACA,KACA,QACA,OACA,MAuBsBC,MAAA,CACtB,CAACC,CAAA,EAAWC,CAAA,MAAZ;EAAA,GACKD,CAAA;EACH,CAACC,CAAA,gBAAOC,CAAA,CAAMC,UAAA,CAAW,CAACH,CAAA,EAA2CI,CAAA;IACnE;QAAMC,OAAA,EAAEC,CAAA;QAAA,GAAYC;MAAA,IAAmBP,CAAA;MACjCQ,CAAA,GAAYF,CAAA,GAAUG,CAAA,GAAOR,CAAA;IAWnC,OATAC,CAAA,CAAMQ,SAAA,CAAU;MACbC,MAAA,CAAeC,MAAA,CAAOC,GAAA,CAAI,gBAAe;IAAA,GACzC,kBAOIX,CAAA,CAAAY,aAAA,CAACN,CAAA,EAADO,CAAA,KAAUR,CAAA,EAAV;MAA0BS,GAAA,EAAKZ;IAAA;EAAA;AAAA,IAG1C;AAAA,OAOF,MAAMa,IAAA,GAAOnB,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}