{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar useStyles = createStyles((theme, {\n  spacing,\n  breakpoints,\n  cols\n}) => {\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = \"maxWidth\" in breakpoint ? \"max-width\" : \"min-width\";\n    const breakpointSize = theme.fn.size({\n      size: property === \"max-width\" ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints\n    });\n    acc[`@media (${property}: ${breakpointSize + (property === \"max-width\" ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing\n      })\n    };\n    return acc;\n  }, {});\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      })\n    }, gridBreakpoints)\n  };\n});\nexport default useStyles;","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","useStyles","createStyles","theme","spacing","breakpoints","cols","gridBreakpoints","getSortedBreakpoints","reduce","acc","breakpoint","property","breakpointSize","fn","size","maxWidth","minWidth","sizes","gridTemplateColumns","gap","root","boxSizing","display"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\core\\src\\components\\SimpleGrid\\SimpleGrid.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n}\n\nexport interface SimpleGridStylesParams {\n  spacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles((theme, { spacing, breakpoints, cols }: SimpleGridStylesParams) => {\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n    const breakpointSize = theme.fn.size({\n      size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints,\n    });\n\n    acc[`@media (${property}: ${breakpointSize + (property === 'max-width' ? 0 : 1)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({\n        size: breakpoint.spacing || spacing,\n        sizes: theme.spacing,\n      }),\n    };\n\n    return acc;\n  }, {});\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'grid',\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      ...gridBreakpoints,\n    },\n  };\n});\n"],"mappings":";;AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAqB;AACtD,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAS,CAACC,cAAc;AAClD,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAS,CAACG,oBAAoB;AACxD,IAAIC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAKD,GAAG,IAAID,GAAG,GAAGX,SAAS,CAACW,GAAG,EAAEC,GAAG,EAAE;EAAEE,UAAU,EAAE,IAAI;EAAEC,YAAY,EAAE,IAAI;EAAEC,QAAQ,EAAE,IAAI;EAAEH;AAAK,CAAE,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAC/J,IAAII,cAAc,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,KAAK,IAAIC,IAAI,IAAID,CAAC,KAAKA,CAAC,GAAG,EAAE,CAAC,EAC5B,IAAId,YAAY,CAACgB,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC,IAAIjB,mBAAmB,EACrB,KAAK,IAAIiB,IAAI,IAAIjB,mBAAmB,CAACgB,CAAC,CAAC,EAAE;IACvC,IAAIX,YAAY,CAACa,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACzC;EACE,OAAOF,CAAC;AACV,CAAC;AAGD,IAAAI,SAAA,GAAeC,YAAY,CAAC,CAACC,KAAK,EAAE;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAI,CAAE,KAAK;EACrE,MAAMC,eAAe,GAAGC,oBAAoB,CAACL,KAAK,EAAEE,WAAW,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAK;IAC3F,MAAMC,QAAQ,GAAG,UAAU,IAAID,UAAU,GAAG,WAAW,GAAG,WAAW;IACrE,MAAME,cAAc,GAAGV,KAAK,CAACW,EAAE,CAACC,IAAI,CAAC;MACnCA,IAAI,EAAEH,QAAQ,KAAK,WAAW,GAAGD,UAAU,CAACK,QAAQ,GAAGL,UAAU,CAACM,QAAQ;MAC1EC,KAAK,EAAEf,KAAK,CAACE;IACnB,CAAK,CAAC;IACFK,GAAG,CAAE,WAAUE,QAAS,KAAIC,cAAc,IAAID,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG,CAAC,CAAE,KAAI,CAAC,GAAG;MACtFO,mBAAmB,EAAG,UAASR,UAAU,CAACL,IAAK,mBAAkB;MACjEc,GAAG,EAAEjB,KAAK,CAACW,EAAE,CAACC,IAAI,CAAC;QACjBA,IAAI,EAAEJ,UAAU,CAACP,OAAO,IAAIA,OAAO;QACnCc,KAAK,EAAEf,KAAK,CAACC;MACrB,CAAO;IACP,CAAK;IACD,OAAOM,GAAG;EACd,CAAG,EAAE,EAAE,CAAC;EACN,OAAO;IACLW,IAAI,EAAEzB,cAAc,CAAC;MACnB0B,SAAS,EAAE,YAAY;MACvBC,OAAO,EAAE,MAAM;MACfJ,mBAAmB,EAAG,UAASb,IAAK,mBAAkB;MACtDc,GAAG,EAAEjB,KAAK,CAACW,EAAE,CAACC,IAAI,CAAC;QAAEA,IAAI,EAAEX,OAAO;QAAEc,KAAK,EAAEf,KAAK,CAACC;MAAO,CAAE;IAChE,CAAK,EAAEG,eAAe;EACtB,CAAG;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}