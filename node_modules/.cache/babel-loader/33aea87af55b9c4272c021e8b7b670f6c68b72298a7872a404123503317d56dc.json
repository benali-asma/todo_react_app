{"ast":null,"code":"import { useState } from 'react';\nfunction useToggle(initialValue, options) {\n  const [state, setState] = useState(initialValue);\n  const toggle = value => {\n    if (typeof value !== \"undefined\") {\n      setState(value);\n    } else {\n      setState(current => {\n        if (current === options[0]) {\n          return options[1];\n        }\n        return options[0];\n      });\n    }\n  };\n  return [state, toggle];\n}\nfunction useBooleanToggle(initialValue = false) {\n  return useToggle(initialValue, [true, false]);\n}\nexport { useBooleanToggle, useToggle };","map":{"version":3,"names":["useToggle","initialValue","options","state","setState","useState","toggle","value","current","useBooleanToggle"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\hooks\\src\\use-toggle\\use-toggle.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function useToggle<T>(initialValue: T, options: [T, T]) {\n  const [state, setState] = useState(initialValue);\n\n  const toggle = (value?: React.SetStateAction<T>) => {\n    if (typeof value !== 'undefined') {\n      setState(value);\n    } else {\n      setState((current) => {\n        if (current === options[0]) {\n          return options[1];\n        }\n\n        return options[0];\n      });\n    }\n  };\n\n  return [state, toggle] as const;\n}\n\nexport function useBooleanToggle(initialValue = false) {\n  return useToggle(initialValue, [true, false]);\n}\n"],"mappings":";AACO,SAASA,SAASA,CAACC,YAAY,EAAEC,OAAO,EAAE;EAC/C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACJ,YAAY,CAAC;EAChD,MAAMK,MAAM,GAAIC,KAAK,IAAK;IACxB,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;MAChCH,QAAQ,CAACG,KAAK,CAAC;IACrB,CAAK,MAAM;MACLH,QAAQ,CAAEI,OAAO,IAAK;QACpB,IAAIA,OAAO,KAAKN,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1B,OAAOA,OAAO,CAAC,CAAC,CAAC;QAC3B;QACQ,OAAOA,OAAO,CAAC,CAAC,CAAC;MACzB,CAAO,CAAC;IACR;EACA,CAAG;EACD,OAAO,CAACC,KAAK,EAAEG,MAAM,CAAC;AACxB;AACO,SAASG,gBAAgBA,CAACR,YAAY,GAAG,KAAK,EAAE;EACrD,OAAOD,SAAS,CAACC,YAAY,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}