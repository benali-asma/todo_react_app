{"ast":null,"code":"import { fromEntries } from './utils/from-entries/from-entries.js';\nimport { useCss } from './use-css.js';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider.js';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names.js';\nfunction createStyles(getCssObjectOrCssObject) {\n  const getCssObject = typeof getCssObjectOrCssObject === \"function\" ? getCssObjectOrCssObject : () => getCssObjectOrCssObject;\n  function useStyles(params, options) {\n    const theme = useMantineTheme();\n    const {\n      styles: themeStyles,\n      classNames: themeClassNames\n    } = useMantineThemeStyles(options == null ? void 0 : options.name);\n    const {\n      css,\n      cx\n    } = useCss();\n    function createRef(refName) {\n      return `__mantine-ref-${refName || \"\"}`;\n    }\n    const cssObject = getCssObject(theme, params, createRef);\n    const _styles = typeof (options == null ? void 0 : options.styles) === \"function\" ? options == null ? void 0 : options.styles(theme) : (options == null ? void 0 : options.styles) || {};\n    const _themeStyles = typeof themeStyles === \"function\" ? themeStyles(theme, params || {}) : themeStyles || {};\n    const classes = fromEntries(Object.keys(cssObject).map(key => {\n      const mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n      return [key, mergedStyles];\n    }));\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options == null ? void 0 : options.classNames, options == null ? void 0 : options.name),\n      cx,\n      theme\n    };\n  }\n  return useStyles;\n}\nexport { createStyles };","map":{"version":3,"names":["createStyles","getCssObjectOrCssObject","getCssObject","useStyles","params","options","theme","useMantineTheme","styles","themeStyles","classNames","themeClassNames","useMantineThemeStyles","name","css","cx","useCss","createRef","refName","cssObject","_styles","_themeStyles","classes","fromEntries","Object","keys","map","key","mergedStyles","mergeClassNames"],"sources":["C:\\Users\\asma1\\OneDrive\\Bureau\\react\\todo_react_app\\node_modules\\@mantine\\styles\\src\\tss\\create-styles.ts"],"sourcesContent":["import type { MantineTheme } from '../theme';\nimport type { CSSObject } from './types';\nimport { fromEntries } from './utils/from-entries/from-entries';\nimport { useCss } from './use-css';\nimport { useMantineTheme, useMantineThemeStyles } from '../theme/MantineProvider';\nimport { mergeClassNames } from './utils/merge-class-names/merge-class-names';\n\nexport interface UseStylesOptions<Key extends string> {\n  classNames?: Partial<Record<Key, string>>;\n  styles?:\n    | Partial<Record<Key, CSSObject>>\n    | ((theme: MantineTheme) => Partial<Record<Key, CSSObject>>);\n  name: string;\n}\n\nexport function createStyles<Key extends string = string, Params = void>(\n  getCssObjectOrCssObject:\n    | ((\n        theme: MantineTheme,\n        params: Params,\n        createRef: (refName: string) => string\n      ) => Record<Key, CSSObject>)\n    | Record<Key, CSSObject>\n) {\n  const getCssObject =\n    typeof getCssObjectOrCssObject === 'function'\n      ? getCssObjectOrCssObject\n      : () => getCssObjectOrCssObject;\n\n  function useStyles(params: Params, options?: UseStylesOptions<Key>) {\n    const theme = useMantineTheme();\n    const { styles: themeStyles, classNames: themeClassNames } = useMantineThemeStyles(\n      options?.name\n    );\n\n    const { css, cx } = useCss();\n\n    function createRef(refName: string) {\n      return `__mantine-ref-${refName || ''}`;\n    }\n\n    const cssObject = getCssObject(theme, params, createRef);\n\n    const _styles =\n      typeof options?.styles === 'function' ? options?.styles(theme) : options?.styles || {};\n    const _themeStyles =\n      typeof themeStyles === 'function' ? themeStyles(theme, params || {}) : themeStyles || {};\n\n    const classes = fromEntries(\n      Object.keys(cssObject).map((key) => {\n        const mergedStyles = cx(css(cssObject[key]), css(_themeStyles[key]), css(_styles[key]));\n        return [key, mergedStyles];\n      })\n    ) as Record<Key, string>;\n\n    return {\n      classes: mergeClassNames(cx, classes, themeClassNames, options?.classNames, options?.name),\n      cx,\n      theme,\n    };\n  }\n\n  return useStyles;\n}\n"],"mappings":";;;;AAIO,SAASA,YAAYA,CAACC,uBAAuB,EAAE;EACpD,MAAMC,YAAY,GAAG,OAAOD,uBAAuB,KAAK,UAAU,GAAGA,uBAAuB,GAAG,MAAMA,uBAAuB;EAC5H,SAASE,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAE;IAClC,MAAMC,KAAK,GAAGC,eAAe,EAAE;IAC/B,MAAM;MAAEC,MAAM,EAAEC,WAAW;MAAEC,UAAU,EAAEC;IAAe,CAAE,GAAGC,qBAAqB,CAACP,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACQ,IAAI,CAAC;IAC3H,MAAM;MAAEC,GAAG;MAAEC;IAAE,CAAE,GAAGC,MAAM,EAAE;IAC5B,SAASC,SAASA,CAACC,OAAO,EAAE;MAC1B,OAAQ,iBAAgBA,OAAO,IAAI,EAAG,EAAC;IAC7C;IACI,MAAMC,SAAS,GAAGjB,YAAY,CAACI,KAAK,EAAEF,MAAM,EAAEa,SAAS,CAAC;IACxD,MAAMG,OAAO,GAAG,QAAQf,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,MAAM,CAAC,KAAK,UAAU,GAAGH,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,MAAM,CAACF,KAAK,CAAC,GAAG,CAACD,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACG,MAAM,KAAK,EAAE;IACxL,MAAMa,YAAY,GAAG,OAAOZ,WAAW,KAAK,UAAU,GAAGA,WAAW,CAACH,KAAK,EAAEF,MAAM,IAAI,EAAE,CAAC,GAAGK,WAAW,IAAI,EAAE;IAC7G,MAAMa,OAAO,GAAGC,WAAW,CAACC,MAAM,CAACC,IAAI,CAACN,SAAS,CAAC,CAACO,GAAG,CAAEC,GAAG,IAAK;MAC9D,MAAMC,YAAY,GAAGb,EAAE,CAACD,GAAG,CAACK,SAAS,CAACQ,GAAG,CAAC,CAAC,EAAEb,GAAG,CAACO,YAAY,CAACM,GAAG,CAAC,CAAC,EAAEb,GAAG,CAACM,OAAO,CAACO,GAAG,CAAC,CAAC,CAAC;MACvF,OAAO,CAACA,GAAG,EAAEC,YAAY,CAAC;IAChC,CAAK,CAAC,CAAC;IACH,OAAO;MACLN,OAAO,EAAEO,eAAe,CAACd,EAAE,EAAEO,OAAO,EAAEX,eAAe,EAAEN,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,UAAU,EAAEL,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACQ,IAAI,CAAC;MAC9IE,EAAE;MACFT;IACN,CAAK;EACL;EACE,OAAOH,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}